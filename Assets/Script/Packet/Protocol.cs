// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Protobuf.Protocol
{

    /// <summary>Holder for reflection information generated from Protocol.proto</summary>
    public static partial class ProtocolReflection
    {

        #region Descriptor
        /// <summary>File descriptor for Protocol.proto</summary>
        public static pbr::FileDescriptor Descriptor
        {
            get { return descriptor; }
        }
        private static pbr::FileDescriptor descriptor;

        static ProtocolReflection()
        {
            byte[] descriptorData = global::System.Convert.FromBase64String(
                string.Concat(
                  "Cg5Qcm90b2NvbC5wcm90bxIIUHJvdG9jb2wiMwoLU19FbnRlckdhbWUSJAoG",
                  "cGxheWVyGAEgASgLMhQuUHJvdG9jb2wuUGxheWVySW5mbyIOCgxTX0xFQVZF",
                  "X0dBTUUiMAoHU19TUEFXThIlCgdwbGF5ZXJzGAEgAygLMhQuUHJvdG9jb2wu",
                  "UGxheWVySW5mbyIeCglTX0RFU1BBV04SEQoJcGxheWVySWRzGAEgAygFIiQK",
                  "BkNfTU9WRRIMCgRwb3NYGAEgASgFEgwKBHBvc1kYAiABKAUiNAoGU19NT1ZF",
                  "Eg4KBnBsYXlJZBgBIAEoBRIMCgRwb3NYGAIgASgFEgwKBHBvc1kYAyABKAUi",
                  "SAoKUGxheWVySW5mbxIQCghwbGF5ZXJJZBgBIAEoBRIMCgRuYW1lGAIgASgJ",
                  "EgwKBHBvc1gYAyABKAUSDAoEcG9zWRgEIAEoBSpkCgVNc2dJZBIQCgxTX0VO",
                  "VEVSX0dBTUUQABIRCg1TX0xFQVZFX0dBTUUyEAESDAoIU19TUEFXTjIQAhIO",
                  "CgpTX0RFU1BBV04yEAMSCwoHQ19NT1ZFMhAEEgsKB1NfTU9WRTIQBUIbqgIY",
                  "R29vZ2xlLlByb3RvYnVmLlByb3RvY29sYgZwcm90bzM="));
            descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
                new pbr::FileDescriptor[] { },
                new pbr::GeneratedClrTypeInfo(new[] { typeof(global::Google.Protobuf.Protocol.MsgId), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_EnterGame), global::Google.Protobuf.Protocol.S_EnterGame.Parser, new[]{ "Player" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_LEAVE_GAME), global::Google.Protobuf.Protocol.S_LEAVE_GAME.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_SPAWN), global::Google.Protobuf.Protocol.S_SPAWN.Parser, new[]{ "Players" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_DESPAWN), global::Google.Protobuf.Protocol.S_DESPAWN.Parser, new[]{ "PlayerIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_MOVE), global::Google.Protobuf.Protocol.C_MOVE.Parser, new[]{ "PosX", "PosY" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_MOVE), global::Google.Protobuf.Protocol.S_MOVE.Parser, new[]{ "PlayId", "PosX", "PosY" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.PlayerInfo), global::Google.Protobuf.Protocol.PlayerInfo.Parser, new[]{ "PlayerId", "Name", "PosX", "PosY" }, null, null, null, null)
                }));
        }
        #endregion

    }
    #region Enums
    public enum MsgId
    {
        [pbr::OriginalName("S_ENTER_GAME")] SEnterGame = 0,
        [pbr::OriginalName("S_LEAVE_GAME2")] SLeaveGame2 = 1,
        [pbr::OriginalName("S_SPAWN2")] SSpawn2 = 2,
        [pbr::OriginalName("S_DESPAWN2")] SDespawn2 = 3,
        [pbr::OriginalName("C_MOVE2")] CMove2 = 4,
        [pbr::OriginalName("S_MOVE2")] SMove2 = 5,
    }

    #endregion

    #region Messages
    public sealed partial class S_EnterGame : pb::IMessage<S_EnterGame>
    {
        private static readonly pb::MessageParser<S_EnterGame> _parser = new pb::MessageParser<S_EnterGame>(() => new S_EnterGame());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<S_EnterGame> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public S_EnterGame()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public S_EnterGame(S_EnterGame other) : this()
        {
            player_ = other.player_ != null ? other.player_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public S_EnterGame Clone()
        {
            return new S_EnterGame(this);
        }

        /// <summary>Field number for the "player" field.</summary>
        public const int PlayerFieldNumber = 1;
        private global::Google.Protobuf.Protocol.PlayerInfo player_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.Protocol.PlayerInfo Player
        {
            get { return player_; }
            set
            {
                player_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as S_EnterGame);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(S_EnterGame other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Player, other.Player)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (player_ != null) hash ^= Player.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (player_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(Player);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (player_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(S_EnterGame other)
        {
            if (other == null)
            {
                return;
            }
            if (other.player_ != null)
            {
                if (player_ == null)
                {
                    Player = new global::Google.Protobuf.Protocol.PlayerInfo();
                }
                Player.MergeFrom(other.Player);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            if (player_ == null)
                            {
                                Player = new global::Google.Protobuf.Protocol.PlayerInfo();
                            }
                            input.ReadMessage(Player);
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class S_LEAVE_GAME : pb::IMessage<S_LEAVE_GAME>
    {
        private static readonly pb::MessageParser<S_LEAVE_GAME> _parser = new pb::MessageParser<S_LEAVE_GAME>(() => new S_LEAVE_GAME());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<S_LEAVE_GAME> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public S_LEAVE_GAME()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public S_LEAVE_GAME(S_LEAVE_GAME other) : this()
        {
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public S_LEAVE_GAME Clone()
        {
            return new S_LEAVE_GAME(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as S_LEAVE_GAME);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(S_LEAVE_GAME other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(S_LEAVE_GAME other)
        {
            if (other == null)
            {
                return;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                }
            }
        }

    }

    public sealed partial class S_SPAWN : pb::IMessage<S_SPAWN>
    {
        private static readonly pb::MessageParser<S_SPAWN> _parser = new pb::MessageParser<S_SPAWN>(() => new S_SPAWN());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<S_SPAWN> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public S_SPAWN()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public S_SPAWN(S_SPAWN other) : this()
        {
            players_ = other.players_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public S_SPAWN Clone()
        {
            return new S_SPAWN(this);
        }

        /// <summary>Field number for the "players" field.</summary>
        public const int PlayersFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Google.Protobuf.Protocol.PlayerInfo> _repeated_players_codec
            = pb::FieldCodec.ForMessage(10, global::Google.Protobuf.Protocol.PlayerInfo.Parser);
        private readonly pbc::RepeatedField<global::Google.Protobuf.Protocol.PlayerInfo> players_ = new pbc::RepeatedField<global::Google.Protobuf.Protocol.PlayerInfo>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Protobuf.Protocol.PlayerInfo> Players
        {
            get { return players_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as S_SPAWN);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(S_SPAWN other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!players_.Equals(other.players_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= players_.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            players_.WriteTo(output, _repeated_players_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            size += players_.CalculateSize(_repeated_players_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(S_SPAWN other)
        {
            if (other == null)
            {
                return;
            }
            players_.Add(other.players_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            players_.AddEntriesFrom(input, _repeated_players_codec);
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class S_DESPAWN : pb::IMessage<S_DESPAWN>
    {
        private static readonly pb::MessageParser<S_DESPAWN> _parser = new pb::MessageParser<S_DESPAWN>(() => new S_DESPAWN());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<S_DESPAWN> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public S_DESPAWN()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public S_DESPAWN(S_DESPAWN other) : this()
        {
            playerIds_ = other.playerIds_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public S_DESPAWN Clone()
        {
            return new S_DESPAWN(this);
        }

        /// <summary>Field number for the "playerIds" field.</summary>
        public const int PlayerIdsFieldNumber = 1;
        private static readonly pb::FieldCodec<int> _repeated_playerIds_codec
            = pb::FieldCodec.ForInt32(10);
        private readonly pbc::RepeatedField<int> playerIds_ = new pbc::RepeatedField<int>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<int> PlayerIds
        {
            get { return playerIds_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as S_DESPAWN);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(S_DESPAWN other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!playerIds_.Equals(other.playerIds_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= playerIds_.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            playerIds_.WriteTo(output, _repeated_playerIds_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            size += playerIds_.CalculateSize(_repeated_playerIds_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(S_DESPAWN other)
        {
            if (other == null)
            {
                return;
            }
            playerIds_.Add(other.playerIds_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                    case 8:
                        {
                            playerIds_.AddEntriesFrom(input, _repeated_playerIds_codec);
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class C_MOVE : pb::IMessage<C_MOVE>
    {
        private static readonly pb::MessageParser<C_MOVE> _parser = new pb::MessageParser<C_MOVE>(() => new C_MOVE());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<C_MOVE> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public C_MOVE()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public C_MOVE(C_MOVE other) : this()
        {
            posX_ = other.posX_;
            posY_ = other.posY_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public C_MOVE Clone()
        {
            return new C_MOVE(this);
        }

        /// <summary>Field number for the "posX" field.</summary>
        public const int PosXFieldNumber = 1;
        private int posX_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int PosX
        {
            get { return posX_; }
            set
            {
                posX_ = value;
            }
        }

        /// <summary>Field number for the "posY" field.</summary>
        public const int PosYFieldNumber = 2;
        private int posY_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int PosY
        {
            get { return posY_; }
            set
            {
                posY_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as C_MOVE);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(C_MOVE other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (PosX != other.PosX) return false;
            if (PosY != other.PosY) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (PosX != 0) hash ^= PosX.GetHashCode();
            if (PosY != 0) hash ^= PosY.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (PosX != 0)
            {
                output.WriteRawTag(8);
                output.WriteInt32(PosX);
            }
            if (PosY != 0)
            {
                output.WriteRawTag(16);
                output.WriteInt32(PosY);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (PosX != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosX);
            }
            if (PosY != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosY);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(C_MOVE other)
        {
            if (other == null)
            {
                return;
            }
            if (other.PosX != 0)
            {
                PosX = other.PosX;
            }
            if (other.PosY != 0)
            {
                PosY = other.PosY;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            PosX = input.ReadInt32();
                            break;
                        }
                    case 16:
                        {
                            PosY = input.ReadInt32();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class S_MOVE : pb::IMessage<S_MOVE>
    {
        private static readonly pb::MessageParser<S_MOVE> _parser = new pb::MessageParser<S_MOVE>(() => new S_MOVE());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<S_MOVE> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public S_MOVE()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public S_MOVE(S_MOVE other) : this()
        {
            playId_ = other.playId_;
            posX_ = other.posX_;
            posY_ = other.posY_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public S_MOVE Clone()
        {
            return new S_MOVE(this);
        }

        /// <summary>Field number for the "playId" field.</summary>
        public const int PlayIdFieldNumber = 1;
        private int playId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int PlayId
        {
            get { return playId_; }
            set
            {
                playId_ = value;
            }
        }

        /// <summary>Field number for the "posX" field.</summary>
        public const int PosXFieldNumber = 2;
        private int posX_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int PosX
        {
            get { return posX_; }
            set
            {
                posX_ = value;
            }
        }

        /// <summary>Field number for the "posY" field.</summary>
        public const int PosYFieldNumber = 3;
        private int posY_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int PosY
        {
            get { return posY_; }
            set
            {
                posY_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as S_MOVE);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(S_MOVE other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (PlayId != other.PlayId) return false;
            if (PosX != other.PosX) return false;
            if (PosY != other.PosY) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (PlayId != 0) hash ^= PlayId.GetHashCode();
            if (PosX != 0) hash ^= PosX.GetHashCode();
            if (PosY != 0) hash ^= PosY.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (PlayId != 0)
            {
                output.WriteRawTag(8);
                output.WriteInt32(PlayId);
            }
            if (PosX != 0)
            {
                output.WriteRawTag(16);
                output.WriteInt32(PosX);
            }
            if (PosY != 0)
            {
                output.WriteRawTag(24);
                output.WriteInt32(PosY);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (PlayId != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayId);
            }
            if (PosX != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosX);
            }
            if (PosY != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosY);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(S_MOVE other)
        {
            if (other == null)
            {
                return;
            }
            if (other.PlayId != 0)
            {
                PlayId = other.PlayId;
            }
            if (other.PosX != 0)
            {
                PosX = other.PosX;
            }
            if (other.PosY != 0)
            {
                PosY = other.PosY;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            PlayId = input.ReadInt32();
                            break;
                        }
                    case 16:
                        {
                            PosX = input.ReadInt32();
                            break;
                        }
                    case 24:
                        {
                            PosY = input.ReadInt32();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class PlayerInfo : pb::IMessage<PlayerInfo>
    {
        private static readonly pb::MessageParser<PlayerInfo> _parser = new pb::MessageParser<PlayerInfo>(() => new PlayerInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PlayerInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlayerInfo()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlayerInfo(PlayerInfo other) : this()
        {
            playerId_ = other.playerId_;
            name_ = other.name_;
            posX_ = other.posX_;
            posY_ = other.posY_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PlayerInfo Clone()
        {
            return new PlayerInfo(this);
        }

        /// <summary>Field number for the "playerId" field.</summary>
        public const int PlayerIdFieldNumber = 1;
        private int playerId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int PlayerId
        {
            get { return playerId_; }
            set
            {
                playerId_ = value;
            }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name
        {
            get { return name_; }
            set
            {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "posX" field.</summary>
        public const int PosXFieldNumber = 3;
        private int posX_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int PosX
        {
            get { return posX_; }
            set
            {
                posX_ = value;
            }
        }

        /// <summary>Field number for the "posY" field.</summary>
        public const int PosYFieldNumber = 4;
        private int posY_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int PosY
        {
            get { return posY_; }
            set
            {
                posY_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as PlayerInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PlayerInfo other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (PlayerId != other.PlayerId) return false;
            if (Name != other.Name) return false;
            if (PosX != other.PosX) return false;
            if (PosY != other.PosY) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
            if (Name.Length != 0) hash ^= Name.GetHashCode();
            if (PosX != 0) hash ^= PosX.GetHashCode();
            if (PosY != 0) hash ^= PosY.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (PlayerId != 0)
            {
                output.WriteRawTag(8);
                output.WriteInt32(PlayerId);
            }
            if (Name.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(Name);
            }
            if (PosX != 0)
            {
                output.WriteRawTag(24);
                output.WriteInt32(PosX);
            }
            if (PosY != 0)
            {
                output.WriteRawTag(32);
                output.WriteInt32(PosY);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (PlayerId != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
            }
            if (Name.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
            }
            if (PosX != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosX);
            }
            if (PosY != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(PosY);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PlayerInfo other)
        {
            if (other == null)
            {
                return;
            }
            if (other.PlayerId != 0)
            {
                PlayerId = other.PlayerId;
            }
            if (other.Name.Length != 0)
            {
                Name = other.Name;
            }
            if (other.PosX != 0)
            {
                PosX = other.PosX;
            }
            if (other.PosY != 0)
            {
                PosY = other.PosY;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            PlayerId = input.ReadInt32();
                            break;
                        }
                    case 18:
                        {
                            Name = input.ReadString();
                            break;
                        }
                    case 24:
                        {
                            PosX = input.ReadInt32();
                            break;
                        }
                    case 32:
                        {
                            PosY = input.ReadInt32();
                            break;
                        }
                }
            }
        }

    }

    #endregion

}

#endregion Designer generated code
